<?xml version="1.0" ?>

<launch>
    <!-- Enable rviz visualization -->
    <arg name="rviz" default="true"/>
    <!-- Set nodes on debug mode -->
    <arg name="debug" default="false"/>

    <!-- The URDF model of the robot -->
    <arg name="urdfFile"/>
    <!-- The task file for the mpc. -->
    <arg name="taskFile"/>
    <!-- The library folder to generate CppAD codegen into -->
    <arg name="libFolder"/>

    <!-- make the files into global parameters -->
    <param name="taskFile" value="$(arg taskFile)"/>
    <param name="urdfFile" value="$(arg urdfFile)"/>
    <param name="libFolder" value="$(arg libFolder)"/>

    <group if="$(arg rviz)">
        <include file="$(find upright_asset)/launch/fake/visualize.launch">
            <arg name="urdfFile" value="$(arg urdfFile)"/>
        </include>
    </group>

    <node if="$(arg debug)" pkg="upright_control_ros" type="mobile_manipulator_mpc" name="mobile_manipulator_mpc"
          output="screen" launch-prefix="gnome-terminal -- gdb -ex run --args"/>
    <node unless="$(arg debug)" pkg="upright_control_ros" type="mobile_manipulator_mpc" name="mobile_manipulator_mpc"
          output="screen" launch-prefix=""/>

    <node pkg="upright_control_ros" type="mobile_manipulator_dummy_node" name="mobile_manipulator_dummy_node"
          output="screen" launch-prefix="gnome-terminal --"/>

    <node if="$(arg rviz)" pkg="upright_control_ros" type="ddt_mobile_manipulator_target"
          name="ddt_mobile_manipulator_target"
          output="screen" launch-prefix=""/>
</launch>